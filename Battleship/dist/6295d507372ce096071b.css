@charset "UTF-8";

* {
    box-sizing: border-box;
    margin: 0 0;
    padding: 0 0;
    outline: none;
}
*::before, *::after {
    box-sizing: border-box;
}

html {
    display: flex;
    height: 100%; /*fallback*/
    height: -webkit-fill-available;
}
body {
    width: 100%;
    overflow-x: clip;
    background-color: #fff;
    font-family: sans-serif;
    font-size: 15px;
    color: #012;
}
button {
    border: none;
    background: none;
    cursor: pointer;
}
.container {
    display: flex;
    flex-flow: column;
    max-width: 1920px;
    min-height: 100%;
    margin: auto;
}
.header {
    flex-grow: 1.5;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    padding: 3% 0;
}
.header .title {
    display: flex;
    align-items: center;
    justify-content: center;
    column-gap: 3%;
    width: 100%;
}
.header .icon {
    width: 200px;
    height: 40px;
    margin-top: -15px;
    opacity: 0.7;
}
.animate .icon.left {
    animation: slideLeft 12s infinite;
}
.animate .icon.right {
    transform: translateX(-10px);
    animation: slideRight 12s infinite;
}
.animate .icon img {
    animation: flipX 12s infinite,
               opacity 12s infinite;
}
@keyframes slideLeft {
    0% {transform: translateX(20px);}
    50% {transform: translateX(-300px);}
    100% {transform: translateX(20px);}
}
@keyframes slideRight {
    0% {transform: translateX(-30px);}
    50% {transform: translateX(300px);}
    100% {transform: translateX(-30px);}
}
@keyframes flipX {
    49% {transform: scaleX(1)}
    50% {transform: scaleX(-1)}
    99% {transform: scaleX(-1)}
    100% {transform: scaleX(1)}
}
@keyframes opacity {
    0% {opacity: 0;}
    10% {opacity: 1;}
    30% {opacity: 1;}
    50% {opacity: 0;}
    60% {opacity: 1;}
    90% {opacity: 1;}
    100% {opacity: 0;}
}
.header h1 {
    margin-right: -20px; /*ls fix*/
    font-size: clamp(40px, 4vw, 50px);
    font-weight: normal;
    letter-spacing: 25px;
    text-transform: uppercase;
    color: #012d;
    text-shadow: 1px 1px #fff3, -1px -1px #fff3,
                -1px 1px #fff3, 1px -1px #fff3;
}
.buttons {
    display: flex;
    align-items: center;
    column-gap: 15px;
    position: absolute;
    right: 15px; top: 15px;
    filter: invert(1);
}
.button {
    display: flex;
    width: 40px;
    height: 40px;
}
button::before {
    content: "";
    flex-grow: 1;
    transition: 0.5s ease;
}
button:hover::before {
    transform: scaleX(-1);
}
.main {
    flex-grow: 1;
    display: flex;
    align-items: flex-start;
}
.boards {
    display: flex;
    justify-content: center;
    width: 100%;
}
.board {
    flex-grow: 1;
    display: grid;
    grid-template: auto 1fr / auto 1fr;
    max-width: 850px;
    padding: 0 5%;
    transform: translate(0, -10px);
}
.board +.board {
    transform: translate(-38px, -10px);
}
.labels {
    display: flex;
    pointer-events: none;
}
.labels:first-child {
    grid-column: 2 / -1;
}
.labels:last-child {
    grid-area: 2 / 1;
    writing-mode: vertical-lr;
    text-orientation: upright;
}
.label {
    flex: 1 0 var(--cell-size, 10%);
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px;
    text-shadow: 1px 1px #fff3, -1px -1px #fff3,
                -1px 1px #fff3, 1px -1px #fff3;
}
.label:last-child {
    writing-mode: horizontal-tb;
}
.grid {
    display: flex;
    flex-wrap: wrap;
}
.cell {
    flex: 1 0 var(--cell-size, 10%);
    aspect-ratio: 1 / 1;
    box-shadow: 0 0 0 1px #000;
    transition: 0.2s ease;
}
#board-1 .cell,
#board-2 .missed.visible,
#board-2 .cell:hover {
    background-color: #def;
}
#board-1 .occupied,
#board-2 .occupied.visible {
    background-color: #ad6;
}
#board-1 .missed,
#board-2 .cell {
    background-color: #fff;
}
#board-1 .destroyed,
#board-2 .destroyed.visible {
    background-color: #c00;
}
#board-2 .cell {
    cursor: crosshair;
}
.modal {
    top: 50%; left: 50%;
    transform: translate(-50%,-50%);
    width: 450px;
    max-width: 95%;
    border: none;
    border-radius: 5px;
    overflow: visible;
    background-color: #fff;
    color: #012d;
}
.modal::backdrop {
    background-color: #000c;
}
.modal, .modal::backdrop {
    transition: 0.5s ease allow-discrete;
    opacity: 0; /*allow discrete*/
}
.modal[open],
.modal[open]::backdrop {
    opacity: 1;
    @starting-style {
        opacity: 0;
    } /*start value goes last*/
}
.modal .close {
    display: grid;
    place-items: center;
    position: absolute;
    top: 12px;
    right: 12px;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: #fff;
    transition: 0.5s ease;
}
.modal .close:before,
.modal .close:after {
    content: "";
    grid-area: 1 / 1;
    width: 16px;
    height: 2px;
    background-color: #000;
}
.modal .close:before {
    transform: rotate(-45deg);
}
.modal .close:after {
    transform: rotate(45deg);
}
.modal .close:hover {
    transform: rotate(360deg);
}
.modal .title {
    display: block;
    border-radius: 6px 6px 0 0;
    background-color: #eee;
    padding: 18px 20px;
    font-size: 25px;
    font-weight: normal;
}
.modal .text {
    display: flex;
    flex-flow: column;
    row-gap: 15px;
    padding: 20px;
    line-height: 20px;
}
.footer {
    flex-grow: 0.5;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2% 0;
    text-align: center;
    color: #fffb;
}
.footer a {
    text-decoration: none;
    color: inherit;
    transition: 0.2s ease;
}
.footer a:hover {
    color: #fff;
}

@media (max-width: 1000px) {

    .header {
        flex-flow: column;
        row-gap: 20px;
    }
    .buttons {
        position: static;
        filter: none;
        opacity: 0.9;
    }
    .header h1 {
        font-size: clamp(30px, 5vw, 40px);
        letter-spacing: clamp(15px, 3vw, 20px);
    }
    .header .icon,
    .header #animate {
        display: none;
    }
    .boards {
        display: grid;
        grid-template: 1fr / 1fr;
    }
    .board {
        grid-area: 1 / 1;
        width: 100%;
        max-width: 700px;
        margin: auto;
        transform: translate(-15px, -10px) !important;
        transition: opacity 0.8s ease;
        pointer-events: none;
        opacity: 0;
    }
    .board.active {
        pointer-events: auto;
        opacity: 1;
    }
}